# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build & Deploy React App CI/CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    types: ['closed']

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Extract Environment Variables as Build Args
        run: echo "${{ secrets.PROD_ENV_FILE }}" | awk '{print "--build-arg " $0}' > build_args.txt
      - name: Build Docker Image
        run: docker build $(cat build_args.txt) -t ${{ secrets.DOCKER_USERNAME }}/ez-check-in-react-app .
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ez-check-in-react-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest  # Using GitHub's cloud-hosted runner
    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/ez-check-in-react-app:latest
            docker rm -f ez-check-in-react-app || true
            docker run -d --network ezcheckin-network -p 80:80 -p 443:443 \
            --name ez-check-in-react-app \
            -v /etc/letsencrypt/live/ezcheckin.app/fullchain.pem:/etc/letsencrypt/live/ezcheckin.app/fullchain.pem:ro \
            -v /etc/letsencrypt/live/ezcheckin.app/privkey.pem:/etc/letsencrypt/live/ezcheckin.app/privkey.pem:ro \
            ${{ secrets.DOCKER_USERNAME }}/ez-check-in-react-app
      # - name: Pull Docker Image
      #   run: docker pull ${{ secrets.DOCKER_USERNAME }}/ez-check-in-react-app:latest
      # - name: Delete old container
      #   run: docker rm -f ez-check-in-react-app || true
      # - name: Run Docker Container
      #   run: |
      #     docker run -d --network ezcheckin-network -p 80:80 -p 443:443 \
      #     --name ez-check-in-react-app \
      #     -v /etc/letsencrypt/live/ezcheckin.app/fullchain.pem:/etc/letsencrypt/live/ezcheckin.app/fullchain.pem:ro \
      #     -v /etc/letsencrypt/live/ezcheckin.app/privkey.pem:/etc/letsencrypt/live/ezcheckin.app/privkey.pem:ro \
      #     ${{ secrets.DOCKER_USERNAME }}/ez-check-in-react-app
